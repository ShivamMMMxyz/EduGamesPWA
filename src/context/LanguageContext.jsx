// import React, { createContext, useState, useContext } from 'react';

// // Translation data for different languages
// const translations = {
//   en: {
// //  title: 'Bored? Study with Games',
//     exploreGeography: 'Explore-Geography',
//     playChemistry: 'Play-Chemistry',
//     learnPhysics: 'Learn-Physics',
//     // science: 'Science Explorer',

//     title: 'Bored? Study with Games',
//     subtitle: 'Learn Smarter, Play Harder!',
//     math: 'Mathematics Quests',
//     wordJourney: 'wordJourney',
//     grammar: 'Grammar Guardians',
//     science: 'Science Explorer',
//     startAdventure: 'Start Your Adventure!',
//     selectLanguage: 'Select Language',
//     leaderboard: 'Leaderboard',
//     home: 'Home',
//     profile: 'Profile',
//     register: 'Register',
//     login: 'Login',
//     name: 'Name:',
//     schoolName: 'School Name:',
//     class: 'Class:',
//     phone: 'Phone Number:',
//     password: 'Password:',
//     haveAccount: 'Already Have An Account?',
//     noAccount: 'Don\'t have an account?',
//     //  title: "Chemistry Match-Up",
//     score: "Score:",
//     time: "Time:",
//     lives: "Lives:",
//     restart: "Restart",
//     hint: "Hint",
//     sound: "Sound",
//     endGameMessage: "Time ran out!",
//     endGameLives: "You've run out of lives!",
//     endGameWin: "ЁЯОЙ You Won!",
//     endGameLose: "ЁЯТе Game Over",
//     playAgain: "Play Again",
//     close: "Close",
//     highScore: "High score:",
//     elementFact: (symbol, name, fact) => `${symbol} тАФ ${name}\n${fact}`,
//     allMatched: (count) => `You matched all ${count} pairs!`,
//       //  title: 'Physics Formula Fill',
//     subtitle: 'Arcade Survival Mode тАФ survive as long as you can тЪб',
//     start: 'Start Game',
//     howToPlay: 'How to Play',
//     levelSelect: 'Level Select',
//     settings: 'Settings',
//     credits: 'Credits',
//     tip: 'ЁЯФе Keep streaks going to earn bonus points!',
//     hearts: 'Hearts',
//     time: 'Time',
//     // score: 'Score',
//     streak: 'Streak',
//     hint: 'Hint',
//     pause: 'Pause',
//     resume: 'Resume',
//     topScore: 'Top Score:',
//     selectTerm: 'Select the missing term',
//     gameOver: 'ЁЯОо Game Over',
//     finalScore: 'Final Score',
//     playAgain: 'Play Again',
//     mainMenu: 'Main Menu',
//     shareScore: 'Share Score',
//     youSurvived: (time) => `тП│ You survived ${time}s`,
//     newHighScore: 'ЁЯПЖ New high score! Congratulations!',
//     keepPracticing: 'Keep practicing to beat your high score!',
//      askMe: 'Ask me',
//     profile: 'Profile',
//     coursest: 'Courses',
//     howToPlayContent: [
//       'Start with 3 hearts and 60s.',
//       'Correct тЖТ +10 pts, +3s, builds streaks. Wrong тЖТ lose heart & -5s.',
//       '2 hints per run: removes one wrong option (-5 pts each).',
//       'Survive as long as you can. Top scores saved locally.'
//     ]
  
//   },
//   hi: {
//      exploreGeography: 'рднреВрдЧреЛрд▓ рдЦреЛрдЬреЗрдВ',
//     playChemistry: 'рд░рд╕рд╛рдпрди рд╡рд┐рдЬреНрдЮрд╛рди рдЦреЗрд▓реЗрдВ',
//     learnPhysics: 'рднреМрддрд┐рдХреА рд╕реАрдЦреЗрдВ',
//     title: 'рдКрдм рдЧрдП рд╣реИрдВ? рдЦреЗрд▓реЛрдВ рд╕реЗ рдкрдврд╝рд╛рдИ рдХрд░реЗрдВ',
//     subtitle: 'рд╕реНрдорд╛рд░реНрдЯ рд╕реАрдЦреЗрдВ, рдФрд░ рдЬреЛрд░ рд╕реЗ рдЦреЗрд▓реЗрдВ!',
//     math: 'рдЧрдгрд┐рдд рдЦреЛрдЬ',
//     wordJourney: 'рд╢рдмреНрдж рдпрд╛рддреНрд░рд╛',
//     grammar: 'рд╡реНрдпрд╛рдХрд░рдг рд░рдХреНрд╖рдХ',
//     science: 'рд╡рд┐рдЬреНрдЮрд╛рди рдЕрдиреНрд╡реЗрд╖рдХ',
//     startAdventure: 'рдЕрдкрдирд╛ рд╕рд╛рд╣рд╕рд┐рдХ рдХрд╛рд░реНрдп рд╢реБрд░реВ рдХрд░реЗрдВ!',
//     selectLanguage: 'рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ',
//     leaderboard: 'рд▓реАрдбрд░рдмреЛрд░реНрдб',
//     home: 'рд╣реЛрдо',
//     profile: 'рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓',
//     register: 'рд░рдЬрд┐рд╕реНрдЯрд░',
//     login: 'рд▓реЙрдЧ рдЗрди рдХрд░реЗрдВ',
//     name: 'рдирд╛рдо:',
//     schoolName: 'рд╡рд┐рджреНрдпрд╛рд▓рдп рдХрд╛ рдирд╛рдо:',
//     class: 'рдХрдХреНрд╖рд╛:',
    
//     phone: 'рдлрд╝реЛрди рдирдВрдмрд░:',
//     password: 'рдкрд╛рд╕рд╡рд░реНрдб:',
//     haveAccount: 'рдкрд╣рд▓реЗ рд╕реЗ рд╣реА рдПрдХ рдЦрд╛рддрд╛ рд╣реИ?',
//     noAccount: 'рдЦрд╛рддрд╛ рдирд╣реАрдВ рд╣реИ?',
//      title: "рд░рд╕рд╛рдпрди рд╡рд┐рдЬреНрдЮрд╛рди рдорд┐рд▓рд╛рдк",
//     score: "рдЕрдВрдХ:",
//     time: "рд╕рдордп:",
//     lives: "рдЬреАрд╡рди:",
//     restart: "рдкреБрдирдГ рдкреНрд░рд╛рд░рдВрдн рдХрд░реЗрдВ",
//     hint: "рд╕рдВрдХреЗрдд",
//     sound: "рдзреНрд╡рдирд┐",
//     endGameMessage: "рд╕рдордп рд╕рдорд╛рдкреНрдд!",
//     endGameLives: "рдЖрдкрдХреЗ рдЬреАрд╡рди рд╕рдорд╛рдкреНрдд рд╣реЛ рдЧрдП рд╣реИрдВ!",
//     endGameWin: "ЁЯОЙ рдЖрдк рдЬреАрдд рдЧрдП!",
//     endGameLose: "ЁЯТе рдЦреЗрд▓ рд╕рдорд╛рдкреНрдд",
//     playAgain: "рдлрд┐рд░ рд╕реЗ рдЦреЗрд▓реЗрдВ",
//     close: "рдмрдВрдж рдХрд░реЗрдВ",
//     highScore: "рдЙрдЪреНрдЪрддрдо рд╕реНрдХреЛрд░:",
//     elementFact: (symbol, name, fact) => `${symbol} тАФ ${name}\n${fact}`,
//     allMatched: (count) => `рдЖрдкрдиреЗ рд╕рднреА ${count} рдЬреЛрдбрд╝реЗ рдорд┐рд▓рд╛рдП!`,
//   // title: 'рднреМрддрд┐рдХ рд╡рд┐рдЬреНрдЮрд╛рди рд╕реВрддреНрд░ рднрд░реЗрдВ',
//     subtitle: 'рдЖрд░реНрдХреЗрдб рд╕рд░реНрд╡рд╛рдЗрд╡рд▓ рдореЛрдб тАФ рдЬрдм рддрдХ рдЖрдк рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ рддрдм рддрдХ рдЬреАрд╡рд┐рдд рд░рд╣реЗрдВ тЪб',
//     start: 'рдЦреЗрд▓ рд╢реБрд░реВ рдХрд░реЗрдВ',
//     howToPlay: 'рдХреИрд╕реЗ рдЦреЗрд▓реЗрдВ',
//     levelSelect: 'рд╕реНрддрд░ рдЪреБрдиреЗрдВ',
//     settings: 'рд╕реЗрдЯрд┐рдВрдЧреНрд╕',
//     credits: 'рдХреНрд░реЗрдбрд┐рдЯ',
//     tip: 'ЁЯФе рдмреЛрдирд╕ рдЕрдВрдХ рдЕрд░реНрдЬрд┐рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд▓рдХреАрд░реЗрдВ рдЬрд╛рд░реА рд░рдЦреЗрдВ!',
//     hearts: 'рджрд┐рд▓',
//     time: 'рд╕рдордп',
//     score: 'рдЕрдВрдХ',
//     streak: 'рд▓рдХреАрд░',
//     hint: 'рд╕рдВрдХреЗрдд',
//     pause: 'рд░реЛрдХреЗрдВ',
//     resume: 'рдлрд┐рд░ рд╕реЗ рд╢реБрд░реВ рдХрд░реЗрдВ',
//     topScore: 'рдЙрдЪреНрдЪрддрдо рд╕реНрдХреЛрд░:',
//     selectTerm: 'рд▓реБрдкреНрдд рдкрдж рдХрд╛ рдЪрдпрди рдХрд░реЗрдВ',
//     gameOver: 'ЁЯОо рдЦреЗрд▓ рд╕рдорд╛рдкреНрдд',
//     finalScore: 'рдЕрдВрддрд┐рдо рдЕрдВрдХ',
//     playAgain: 'рдлрд┐рд░ рд╕реЗ рдЦреЗрд▓реЗрдВ',
//     mainMenu: 'рдореБрдЦреНрдп рдореЗрдиреВ',
//     shareScore: 'рдЕрдВрдХ рд╕рд╛рдЭрд╛ рдХрд░реЗрдВ',
//     youSurvived: (time) => `тП│ рдЖрдк ${time}s рддрдХ рдЬреАрд╡рд┐рдд рд░рд╣реЗ`,
//     newHighScore: 'ЁЯПЖ рдирдпрд╛ рдЙрдЪреНрдЪ рд╕реНрдХреЛрд░! рдмрдзрд╛рдИ рд╣реЛ!',
//     keepPracticing: 'рдЕрдкрдирд╛ рдЙрдЪреНрдЪ рд╕реНрдХреЛрд░ рд╣рд░рд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдЕрднреНрдпрд╛рд╕ рдХрд░рддреЗ рд░рд╣реЗрдВ!',
//       // leaderboard: 'Leaderboard',
//     // home: 'Home',
//     askMe: 'рдореБрдЭрд╕реЗ рдкреВрдЫреЗрдВ',
//     profile: 'рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓',
//     coursest: 'рдкрд╛рдареНрдпрдХреНрд░рдо',
//     howToPlayContent: [
//       '3 рджрд┐рд▓реЛрдВ рдФрд░ 60s рдХреЗ рд╕рд╛рде рд╢реБрд░реВ рдХрд░реЗрдВред',
//       'рд╕рд╣реА тЖТ +10 рдЕрдВрдХ, +3s, рд▓рдХреАрд░реЗрдВ рдмрдирд╛рддрд╛ рд╣реИред рдЧрд▓рдд тЖТ рджрд┐рд▓ рдЦреЛрдирд╛ рдФрд░ -5sред',
//       'рдкреНрд░рддрд┐ рджреМрдбрд╝ 2 рд╕рдВрдХреЗрдд: рдПрдХ рдЧрд▓рдд рд╡рд┐рдХрд▓реНрдк рд╣рдЯрд╛рддрд╛ рд╣реИ (-5 рдЕрдВрдХ рдкреНрд░рддреНрдпреЗрдХ)ред',
//       'рдЬрдм рддрдХ рдЖрдк рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ рддрдм рддрдХ рдЬреАрд╡рд┐рдд рд░рд╣реЗрдВред рд╢реАрд░реНрд╖ рд╕реНрдХреЛрд░ рд╕реНрдерд╛рдиреАрдп рд░реВрдк рд╕реЗ рд╕рд╣реЗрдЬреЗ рдЧрдПред'
//     ]


//   },
//   or: {
//     title: 'рммрнЛрм░ рм╣рнЗрмЙрмЫрмирнНрмдрм┐? рмЦрнЗрм│ рм╕рм╣рм┐рмд рмкрмврмирнНрмдрнБ',
//   exploreGeography: 'рмнрнВрмЧрнЛрм│ рмЕрмирнБрм╕рмирнНрмзрм╛рми рмХрм░рмирнНрмдрнБ',
//     playChemistry: 'рм░рм╕рм╛рнЯрми рммрм┐рмЬрнНрмЮрм╛рми рмЦрнЗрм│рмирнНрмдрнБ',
//     learnPhysics: 'рмкрмжрм╛рм░рнНрме рммрм┐рмЬрнНрмЮрм╛рми рм╢рм┐рмЦрмирнНрмдрнБ',

//     subtitle: 'рм╕рнНрморм╛рм░рнНрмЯ рм╢рм┐рмЦрмирнНрмдрнБ, рм╣рм╛рм░рнНрмб рмЦрнЗрм│рмирнНрмдрнБ!',
//     math: 'рмЧрмгрм┐рмд рмХрнНрн▒рнЗрм╖рнНрмЯрнН',
//     wordJourney: 'рм╢рммрнНрмж рмпрм╛рмдрнНрм░рм╛',
//     grammar: 'рммрнНрнЯрм╛рмХрм░рмг рмЧрм╛рм░рнНрмбрм┐рмЖрмирнН',
//     science: 'рммрм┐рмЬрнНрмЮрм╛рми рмПрмХрнНрм╕рмкрнНрм▓рнЛрм░рм░рнН',
//     startAdventure: 'рмЖрмкрмгрмЩрнНрмХрм░ рмжрнБрмГрм╕рм╛рм╣рм╕ рмЖрм░рморнНрмн рмХрм░рмирнНрмдрнБ!',
//     selectLanguage: 'рмнрм╛рм╖рм╛ рммрм╛рмЫрмирнНрмдрнБ',
//     leaderboard: 'рм▓рм┐рмбрм░рммрнЛрм░рнНрмб',
//     home: 'рм╣рнЛрморнН',
//     profile: 'рмкрнНрм░рнЛрмлрм╛рмЗрм▓рнН',
//     register: 'рм░рнЗрмЬрм┐рм╖рнНрмЯрм░рнН',
//     login: 'рм▓рмЧрмЗрмирнН рмХрм░рмирнНрмдрнБ',
//     name: 'рмирм╛рмо:',
//     schoolName: 'рммрм┐рмжрнНрнЯрм╛рм│рнЯрм░ рмирм╛рмо:',
//     class: 'рм╢рнНрм░рнЗрмгрнА:',
//     phone: 'рмлрнЛрми рмирморнНрммрм░:',
//     password: 'рмкрм╛рм╕рн▒рм╛рм░рнНрмб:',
//     haveAccount: 'рмЖрмЧрм░рнБ рмЦрм╛рмдрм╛ рмЕрмЫрм┐?',
//     noAccount: 'рмЦрм╛рмдрм╛ рмирм╛рм╣рм┐рмБ?',

// //  title: "рм░рм╕рм╛рнЯрми рммрм┐рмЬрнНрмЮрм╛рми рморнЗрм│рм╛рмг",
//     score: "рм╕рнНрмХрнЛрм░:",
//     time: "рм╕рморнЯ:",
//     lives: "рмЬрнАрммрми:",
//     restart: "рмкрнБрмирмГ рмЖрм░рморнНрмн",
//     hint: "рм╕рмЩрнНрмХрнЗрмд",
//     sound: "рм╢рммрнНрмж",
//     endGameMessage: "рм╕рморнЯ рм╕рм░рм┐рмЧрм▓рм╛!",
//     endGameLives: "рмЖрмкрмгрмЩрнНрмХ рмЬрнАрммрми рм╕рм░рм┐рмЧрм▓рм╛!",
//     endGameWin: "ЁЯОЙ рмЖрмкрмг рмЬрм┐рмдрм┐рм▓рнЗ!",
//     endGameLose: "ЁЯТе рмЦрнЗрм│ рм╢рнЗрм╖",
//     playAgain: "рмкрнБрмгрм┐ рмЦрнЗрм│рмирнНрмдрнБ",
//     close: "рммрмирнНрмж рмХрм░рмирнНрмдрнБ",
//     highScore: "рм╕рм░рнНрммрнЛрмЪрнНрмЪ рм╕рнНрмХрнЛрм░:",
//     elementFact: (symbol, name, fact) => `${symbol} тАФ ${name}\n${fact}`,
//     allMatched: (count) => `рмЖрмкрмг рм╕рморм╕рнНрмд ${count} рмпрнЛрмбрм╝рм┐ рморм┐рм╢рм╛рмЗрм▓рнЗ!`,
//      title: 'рмкрмжрм╛рм░рнНрме рммрм┐рмЬрнНрмЮрм╛рми рм╕рнВрмдрнНрм░ рмкрнВрм░рмг',
//     subtitle: 'рмЖрм░рнНрмХрнЗрмбрнН рм╕рм░рнНрмнрм╛рмЗрмнрм╛рм▓рнН рморнЛрмбрнН тАФ рмпрнЗрмдрнЗ рм╕рморнЯ рмкрм░рнНрмпрнНрнЯрмирнНрмд рммрмЮрнНрмЪрм┐рмкрм╛рм░рм┐рммрнЗ рммрмЮрнНрмЪрмирнНрмдрнБ тЪб',
//     start: 'рмЦрнЗрм│ рмЖрм░рморнНрмн рмХрм░рмирнНрмдрнБ',
//     howToPlay: 'рмХрм┐рмкрм░рм┐ рмЦрнЗрм│рм┐рммрнЗ',
//     levelSelect: 'рм╕рнНрмдрм░ рммрм╛рмЫрмирнНрмдрнБ',
//     settings: 'рм╕рнЗрмЯрм┐рмЩрнНрмЧрнНрм╕',
//     credits: 'рмХрнНрм░рнЗрмбрм┐рмЯрнН',
//     tip: 'ЁЯФе рммрнЛрмирм╕рнН рмкрмПрмгрнНрмЯ рмкрм╛рмЗрммрм╛ рмкрм╛рмЗрмБ рм╖рнНрмЯрнНрм░рм┐рмХрнН рмЬрм╛рм░рм┐ рм░рмЦрмирнНрмдрнБ!',
//     hearts: 'рм╣рнГрмжрнЯ',
//     // time: 'рм╕рморнЯ',
//     // score: 'рм╕рнНрмХрнЛрм░',
//     streak: 'рм╖рнНрмЯрнНрм░рм┐рмХрнН',
//     // hint: 'рм╕рнВрмЪрмирм╛',
//     pause: 'рммрм┐рм░рмдрм┐',
//     resume: 'рмкрнБрмирм░рм╛рморнНрмн',
//     topScore: 'рм╕рм░рнНрммрнЛрмЪрнНрмЪ рм╕рнНрмХрнЛрм░:',
//     selectTerm: 'рмирм┐рмЦрнЛрмЬ рм╢рммрнНрмж рммрм╛рмЫрмирнНрмдрнБ',
//     gameOver: 'ЁЯОо рмЦрнЗрм│ рм╢рнЗрм╖',
//     finalScore: 'рмЕрмирнНрмдрм┐рмо рм╕рнНрмХрнЛрм░',
//     // playAgain: 'рмкрнБрмирмГ рмЦрнЗрм│рмирнНрмдрнБ',
//     mainMenu: 'рморнБрмЦрнНрнЯ рморнЗрмирнБ',
//     shareScore: 'рм╕рнНрмХрнЛрм░ рм╕рнЗрнЯрм╛рм░ рмХрм░рмирнНрмдрнБ',
//     youSurvived: (time) => `тП│ рмЖрмкрмг ${time}s рмкрм░рнНрмпрнНрнЯрмирнНрмд рммрмЮрнНрмЪрм┐рм▓рнЗ`,
//     newHighScore: 'ЁЯПЖ рмирнВрмЖ рм╕рм░рнНрммрнЛрмЪрнНрмЪ рм╕рнНрмХрнЛрм░! рмЕрмнрм┐рмирмирнНрмжрми!',
//     keepPracticing: 'рмЖрмкрмгрмЩрнНрмХрм░ рм╕рм░рнНрммрнЛрмЪрнНрмЪ рм╕рнНрмХрнЛрм░рмХрнБ рм╣рм░рм╛рмЗрммрм╛ рмкрм╛рмЗрмБ рмЕрмнрнНрнЯрм╛рм╕ рмХрм░рмирнНрмдрнБ!',
//     // leaderboard: 'рд▓реАрдбрд░рдмреЛрд░реНрдб',
//     // home: 'рд╣реЛрдо',
   
//       // leaderboard: 'рм▓рм┐рмбрм░рммрнЛрм░рнНрмб',
//     // home: 'рм╣рнЛрморнН',
//     askMe: 'рморнЛрмдрнЗ рмкрмЪрм╛рм░рмирнНрмдрнБ',
//     // profile: 'рмкрнНрм░рнЛрмлрм╛рмЗрм▓рнН',
//     coursest: 'рмкрм╛рмарнНрнЯрмХрнНрм░рмо',
//     howToPlayContent: [
//       '3 рм╣рнГрмжрнЯ рмПрммрмВ 60s рм╕рм╣рм┐рмд рмЖрм░рморнНрмн рмХрм░рмирнНрмдрнБред',
//       'рмарм┐рмХрнН тЖТ +10 рмкрмПрмгрнНрмЯрнН, +3s, рм╖рнНрмЯрнНрм░рм┐рмХрнНрм╕ рмдрм┐рмЖрм░рм┐ рмХрм░рнЗред рмнрнБрм▓рнН тЖТ рм╣рнГрмжрнЯ рм╣рм░рм╛рмЗрммрм╛ рмПрммрмВ -5sред',
//       'рмкрнНрм░рмдрм┐ рм░рмирнНтАМрм░рнЗ 2 рм╕рнВрмЪрмирм╛: рмПрмХ рмнрнБрм▓рнН рммрм┐рмХрм│рнНрмк рм╣рмЯрм╛рмЗрмерм╛рмП (-5 рмкрмПрмгрнНрмЯрнН рмкрнНрм░рмдрнНрнЯрнЗрмХ)ред',
//       'рмпрнЗрмдрнЗ рм╕рморнЯ рмкрм░рнНрмпрнНрнЯрмирнНрмд рммрмЮрнНрмЪрм┐рмкрм╛рм░рм┐рммрнЗ рммрмЮрнНрмЪрмирнНрмдрнБред рм╕рм░рнНрммрнЛрмЪрнНрмЪ рм╕рнНрмХрнЛрм░ рм╕рнНрмерм╛рмирнАрнЯ рмнрм╛рммрм░рнЗ рм╕рнЗрмнрнН рм╣рнЛрмЗрмерм╛рмПред'
//     ]

//   },
// };

// const LanguageContext = createContext();

// export const LanguageProvider = ({ children }) => {
//   const [language, setLanguage] = useState('en');

//   const value = {
//     language,
//     setLanguage,
//     translations: translations[language],
//   };

//   return (
//     <LanguageContext.Provider value={value}>
//       {children}
//     </LanguageContext.Provider>
//   );
// };

// export const useLanguage = () => useContext(LanguageContext);





import React, { createContext, useState, useContext } from 'react';

// Translation data for different languages
const translations = {
  en: {
    exploreGeography: 'Explore-Geography',
    playChemistry: 'Play-Chemistry',
    learnPhysics: 'Learn-Physics',
    // science: 'Science Explorer',

    title: 'Bored? Study with Games',
    // subtitle: 'Learn Smarter, Play Harder!',
    math: 'Mathematics Quests',
    wordJourney: 'wordJourney',
    grammar: 'Grammar Guardians',
    science: 'Science Explorer',
    startAdventure: 'Start Your Adventure!',
    selectLanguage: 'Select Language',
    leaderboard: 'Leaderboard',
    home: 'Home',
    profile: 'Profile',
    register: 'Register',
    login: 'Login',
    name: 'Name:',
    schoolName: 'School Name:',
    class: 'Class:',
    phone: 'Phone Number:',
    password: 'Password:',
    haveAccount: 'Already Have An Account?',
    noAccount: 'Don\'t have an account?',
    // title: "Chemistry Match-Up",
    score: "Score:",
    time: "Time:",
    lives: "Lives:",
    restart: "Restart",
    hint: "Hint",
    sound: "Sound",
    endGameMessage: "Time ran out!",
    endGameLives: "You've run out of lives!",
    endGameWin: "ЁЯОЙ You Won!",
    endGameLose: "ЁЯТе Game Over",
    playAgain: "Play Again",
    close: "Close",
    highScore: "High score:",
    elementFact: (symbol, name, fact) => `${symbol} тАФ ${name}\n${fact}`,
    allMatched: (count) => `You matched all ${count} pairs!`,
    // title: 'Physics Formula Fill',
    subtitle: 'Arcade Survival Mode тАФ survive as long as you can тЪб',
    start: 'Start Game',
    howToPlay: 'How to Play',
    levelSelect: 'Level Select',
    settings: 'Settings',
    credits: 'Credits',
    tip: 'ЁЯФе Keep streaks going to earn bonus points!',
    hearts: 'Hearts',
    // time: 'Time',
    // score: 'Score',
    streak: 'Streak',
    // hint: 'Hint',
    pause: 'Pause',
    resume: 'Resume',
    topScore: 'Top Score:',
    selectTerm: 'Select the missing term',
    gameOver: 'ЁЯОо Game Over',
    finalScore: 'Final Score',
    // playAgain: 'Play Again',
    mainMenu: 'Main Menu',
    shareScore: 'Share Score',
    youSurvived: (time) => `тП│ You survived ${time}s`,
    newHighScore: 'ЁЯПЖ New high score! Congratulations!',
    keepPracticing: 'Keep practicing to beat your high score!',
    askMe: 'Ask me',
    // profile: 'Profile',
    coursest: 'Courses',
    howToPlayContent: [
      'Start with 3 hearts and 60s.',
      'Correct тЖТ +10 pts, +3s, builds streaks. Wrong тЖТ lose heart & -5s.',
      '2 hints per run: removes one wrong option (-5 pts each).',
      'Survive as long as you can. Top scores saved locally.'
    ]
  },

  hi: {
    exploreGeography: 'рднреВрдЧреЛрд▓ рдЦреЛрдЬреЗрдВ',
    playChemistry: 'рд░рд╕рд╛рдпрди рд╡рд┐рдЬреНрдЮрд╛рди рдЦреЗрд▓реЗрдВ',
    learnPhysics: 'рднреМрддрд┐рдХреА рд╕реАрдЦреЗрдВ',
    title: 'рдКрдм рдЧрдП рд╣реИрдВ? рдЦреЗрд▓реЛрдВ рд╕реЗ рдкрдврд╝рд╛рдИ рдХрд░реЗрдВ',
    subtitle: 'рд╕реНрдорд╛рд░реНрдЯ рд╕реАрдЦреЗрдВ, рдФрд░ рдЬреЛрд░ рд╕реЗ рдЦреЗрд▓реЗрдВ!',
    math: 'рдЧрдгрд┐рдд рдЦреЛрдЬ',
    wordJourney: 'рд╢рдмреНрдж рдпрд╛рддреНрд░рд╛',
    grammar: 'рд╡реНрдпрд╛рдХрд░рдг рд░рдХреНрд╖рдХ',
    science: 'рд╡рд┐рдЬреНрдЮрд╛рди рдЕрдиреНрд╡реЗрд╖рдХ',
    startAdventure: 'рдЕрдкрдирд╛ рд╕рд╛рд╣рд╕рд┐рдХ рдХрд╛рд░реНрдп рд╢реБрд░реВ рдХрд░реЗрдВ!',
    selectLanguage: 'рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ',
    leaderboard: 'рд▓реАрдбрд░рдмреЛрд░реНрдб',
    home: 'рд╣реЛрдо',
    profile: 'рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓',
    register: 'рд░рдЬрд┐рд╕реНрдЯрд░',
    login: 'рд▓реЙрдЧ рдЗрди рдХрд░реЗрдВ',
    name: 'рдирд╛рдо:',
    schoolName: 'рд╡рд┐рджреНрдпрд╛рд▓рдп рдХрд╛ рдирд╛рдо:',
    class: 'рдХрдХреНрд╖рд╛:',
    phone: 'рдлрд╝реЛрди рдирдВрдмрд░:',
    password: 'рдкрд╛рд╕рд╡рд░реНрдб:',
    haveAccount: 'рдкрд╣рд▓реЗ рд╕реЗ рд╣реА рдПрдХ рдЦрд╛рддрд╛ рд╣реИ?',
    noAccount: 'рдЦрд╛рддрд╛ рдирд╣реАрдВ рд╣реИ?',
    // title: "рд░рд╕рд╛рдпрди рд╡рд┐рдЬреНрдЮрд╛рди рдорд┐рд▓рд╛рдк",
    score: "рдЕрдВрдХ:",
    time: "рд╕рдордп:",
    lives: "рдЬреАрд╡рди:",
    restart: "рдкреБрдирдГ рдкреНрд░рд╛рд░рдВрдн рдХрд░реЗрдВ",
    hint: "рд╕рдВрдХреЗрдд",
    sound: "рдзреНрд╡рдирд┐",
    endGameMessage: "рд╕рдордп рд╕рдорд╛рдкреНрдд!",
    endGameLives: "рдЖрдкрдХреЗ рдЬреАрд╡рди рд╕рдорд╛рдкреНрдд рд╣реЛ рдЧрдП рд╣реИрдВ!",
    endGameWin: "ЁЯОЙ рдЖрдк рдЬреАрдд рдЧрдП!",
    endGameLose: "ЁЯТе рдЦреЗрд▓ рд╕рдорд╛рдкреНрдд",
    playAgain: "рдлрд┐рд░ рд╕реЗ рдЦреЗрд▓реЗрдВ",
    close: "рдмрдВрдж рдХрд░реЗрдВ",
    highScore: "рдЙрдЪреНрдЪрддрдо рд╕реНрдХреЛрд░:",
    elementFact: (symbol, name, fact) => `${symbol} тАФ ${name}\n${fact}`,
    allMatched: (count) => `рдЖрдкрдиреЗ рд╕рднреА ${count} рдЬреЛрдбрд╝реЗ рдорд┐рд▓рд╛рдП!`,
    // title: 'рднреМрддрд┐рдХ рд╡рд┐рдЬреНрдЮрд╛рди рд╕реВрддреНрд░ рднрд░реЗрдВ',
    // subtitle: 'рдЖрд░реНрдХреЗрдб рд╕рд░реНрд╡рд╛рдЗрд╡рд▓ рдореЛрдб тАФ рдЬрдм рддрдХ рдЖрдк рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ рддрдм рддрдХ рдЬреАрд╡рд┐рдд рд░рд╣реЗрдВ тЪб',
    start: 'рдЦреЗрд▓ рд╢реБрд░реВ рдХрд░реЗрдВ',
    howToPlay: 'рдХреИрд╕реЗ рдЦреЗрд▓реЗрдВ',
    levelSelect: 'рд╕реНрддрд░ рдЪреБрдиреЗрдВ',
    settings: 'рд╕реЗрдЯрд┐рдВрдЧреНрд╕',
    credits: 'рдХреНрд░реЗрдбрд┐рдЯ',
    tip: 'ЁЯФе рдмреЛрдирд╕ рдЕрдВрдХ рдЕрд░реНрдЬрд┐рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд▓рдХреАрд░реЗрдВ рдЬрд╛рд░реА рд░рдЦреЗрдВ!',
    hearts: 'рджрд┐рд▓',
    // time: 'рд╕рдордп',
    // score: 'рдЕрдВрдХ',
    streak: 'рд▓рдХреАрд░',
    // hint: 'рд╕рдВрдХреЗрдд',
    pause: 'рд░реЛрдХреЗрдВ',
    resume: 'рдлрд┐рд░ рд╕реЗ рд╢реБрд░реВ рдХрд░реЗрдВ',
    topScore: 'рдЙрдЪреНрдЪрддрдо рд╕реНрдХреЛрд░:',
    selectTerm: 'рд▓реБрдкреНрдд рдкрдж рдХрд╛ рдЪрдпрди рдХрд░реЗрдВ',
    gameOver: 'ЁЯОо рдЦреЗрд▓ рд╕рдорд╛рдкреНрдд',
    finalScore: 'рдЕрдВрддрд┐рдо рдЕрдВрдХ',
    // playAgain: 'рдлрд┐рд░ рд╕реЗ рдЦреЗрд▓реЗрдВ',
    mainMenu: 'рдореБрдЦреНрдп рдореЗрдиреВ',
    shareScore: 'рдЕрдВрдХ рд╕рд╛рдЭрд╛ рдХрд░реЗрдВ',
    youSurvived: (time) => `тП│ рдЖрдк ${time}s рддрдХ рдЬреАрд╡рд┐рдд рд░рд╣реЗ`,
    newHighScore: 'ЁЯПЖ рдирдпрд╛ рдЙрдЪреНрдЪ рд╕реНрдХреЛрд░! рдмрдзрд╛рдИ рд╣реЛ!',
    keepPracticing: 'рдЕрдкрдирд╛ рдЙрдЪреНрдЪ рд╕реНрдХреЛрд░ рд╣рд░рд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдЕрднреНрдпрд╛рд╕ рдХрд░рддреЗ рд░рд╣реЗрдВ!',
    askMe: 'рдореБрдЭрд╕реЗ рдкреВрдЫреЗрдВ',
    // profile: 'рдкреНрд░реЛрдлрд╝рд╛рдЗрд▓',
    coursest: 'рдкрд╛рдареНрдпрдХреНрд░рдо',
    howToPlayContent: [
      '3 рджрд┐рд▓реЛрдВ рдФрд░ 60s рдХреЗ рд╕рд╛рде рд╢реБрд░реВ рдХрд░реЗрдВред',
      'рд╕рд╣реА тЖТ +10 рдЕрдВрдХ, +3s, рд▓рдХреАрд░реЗрдВ рдмрдирд╛рддрд╛ рд╣реИред рдЧрд▓рдд тЖТ рджрд┐рд▓ рдЦреЛрдирд╛ рдФрд░ -5sред',
      'рдкреНрд░рддрд┐ рджреМрдбрд╝ 2 рд╕рдВрдХреЗрдд: рдПрдХ рдЧрд▓рдд рд╡рд┐рдХрд▓реНрдк рд╣рдЯрд╛рддрд╛ рд╣реИ (-5 рдЕрдВрдХ рдкреНрд░рддреНрдпреЗрдХ)ред',
      'рдЬрдм рддрдХ рдЖрдк рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ рддрдм рддрдХ рдЬреАрд╡рд┐рдд рд░рд╣реЗрдВред рд╢реАрд░реНрд╖ рд╕реНрдХреЛрд░ рд╕реНрдерд╛рдиреАрдп рд░реВрдк рд╕реЗ рд╕рд╣реЗрдЬреЗ рдЧрдПред'
    ]
  },

  or: {
    title: 'рммрнЛрм░ рм╣рнЗрмЙрмЫрмирнНрмдрм┐? рмЦрнЗрм│ рм╕рм╣рм┐рмд рмкрмврмирнНрмдрнБ',
    exploreGeography: 'рмнрнВрмЧрнЛрм│ рмЕрмирнБрм╕рмирнНрмзрм╛рми рмХрм░рмирнНрмдрнБ',
    playChemistry: 'рм░рм╕рм╛рнЯрми рммрм┐рмЬрнНрмЮрм╛рми рмЦрнЗрм│рмирнНрмдрнБ',
    learnPhysics: 'рмкрмжрм╛рм░рнНрме рммрм┐рмЬрнНрмЮрм╛рми рм╢рм┐рмЦрмирнНрмдрнБ',
    subtitle: 'рм╕рнНрморм╛рм░рнНрмЯ рм╢рм┐рмЦрмирнНрмдрнБ, рм╣рм╛рм░рнНрмб рмЦрнЗрм│рмирнНрмдрнБ!',
    math: 'рмЧрмгрм┐рмд рмХрнНрн▒рнЗрм╖рнНрмЯрнН',
    wordJourney: 'рм╢рммрнНрмж рмпрм╛рмдрнНрм░рм╛',
    grammar: 'рммрнНрнЯрм╛рмХрм░рмг рмЧрм╛рм░рнНрмбрм┐рмЖрмирнН',
    science: 'рммрм┐рмЬрнНрмЮрм╛рми рмПрмХрнНрм╕рмкрнНрм▓рнЛрм░рм░рнН',
    startAdventure: 'рмЖрмкрмгрмЩрнНрмХрм░ рмжрнБрмГрм╕рм╛рм╣рм╕ рмЖрм░рморнНрмн рмХрм░рмирнНрмдрнБ!',
    selectLanguage: 'рмнрм╛рм╖рм╛ рммрм╛рмЫрмирнНрмдрнБ',
    leaderboard: 'рм▓рм┐рмбрм░рммрнЛрм░рнНрмб',
    home: 'рм╣рнЛрморнН',
    profile: 'рмкрнНрм░рнЛрмлрм╛рмЗрм▓рнН',
    register: 'рм░рнЗрмЬрм┐рм╖рнНрмЯрм░рнН',
    login: 'рм▓рмЧрмЗрмирнН рмХрм░рмирнНрмдрнБ',
    name: 'рмирм╛рмо:',
    schoolName: 'рммрм┐рмжрнНрнЯрм╛рм│рнЯрм░ рмирм╛рмо:',
    class: 'рм╢рнНрм░рнЗрмгрнА:',
    phone: 'рмлрнЛрми рмирморнНрммрм░:',
    password: 'рмкрм╛рм╕рн▒рм╛рм░рнНрмб:',
    haveAccount: 'рмЖрмЧрм░рнБ рмЦрм╛рмдрм╛ рмЕрмЫрм┐?',
    noAccount: 'рмЦрм╛рмдрм╛ рмирм╛рм╣рм┐рмБ?',
    // title: "рм░рм╕рм╛рнЯрми рммрм┐рмЬрнНрмЮрм╛рми рморнЗрм│рм╛рмг",
    score: "рм╕рнНрмХрнЛрм░:",
    time: "рм╕рморнЯ:",
    lives: "рмЬрнАрммрми:",
    restart: "рмкрнБрмирмГ рмЖрм░рморнНрмн",
    hint: "рм╕рмЩрнНрмХрнЗрмд",
    sound: "рм╢рммрнНрмж",
    endGameMessage: "рм╕рморнЯ рм╕рм░рм┐рмЧрм▓рм╛!",
    endGameLives: "рмЖрмкрмгрмЩрнНрмХ рмЬрнАрммрми рм╕рм░рм┐рмЧрм▓рм╛!",
    endGameWin: "ЁЯОЙ рмЖрмкрмг рмЬрм┐рмдрм┐рм▓рнЗ!",
    endGameLose: "ЁЯТе рмЦрнЗрм│ рм╢рнЗрм╖",
    playAgain: "рмкрнБрмгрм┐ рмЦрнЗрм│рмирнНрмдрнБ",
    close: "рммрмирнНрмж рмХрм░рмирнНрмдрнБ",
    highScore: "рм╕рм░рнНрммрнЛрмЪрнНрмЪ рм╕рнНрмХрнЛрм░:",
    elementFact: (symbol, name, fact) => `${symbol} тАФ ${name}\n${fact}`,
    allMatched: (count) => `рмЖрмкрмг рм╕рморм╕рнНрмд ${count} рмпрнЛрмбрм╝рм┐ рморм┐рм╢рм╛рмЗрм▓рнЗ!`,
    // title: 'рмкрмжрм╛рм░рнНрме рммрм┐рмЬрнНрмЮрм╛рми рм╕рнВрмдрнНрм░ рмкрнВрм░рмг',
    // subtitle: 'рмЖрм░рнНрмХрнЗрмбрнН рм╕рм░рнНрмнрм╛рмЗрмнрм╛рм▓рнН рморнЛрмбрнН тАФ рмпрнЗрмдрнЗ рм╕рморнЯ рмкрм░рнНрмпрнНрнЯрмирнНрмд рммрмЮрнНрмЪрм┐рмкрм╛рм░рм┐рммрнЗ рммрмЮрнНрмЪрмирнНрмдрнБ тЪб',
    start: 'рмЦрнЗрм│ рмЖрм░рморнНрмн рмХрм░рмирнНрмдрнБ',
    howToPlay: 'рмХрм┐рмкрм░рм┐ рмЦрнЗрм│рм┐рммрнЗ',
    levelSelect: 'рм╕рнНрмдрм░ рммрм╛рмЫрмирнНрмдрнБ',
    settings: 'рм╕рнЗрмЯрм┐рмЩрнНрмЧрнНрм╕',
    credits: 'рмХрнНрм░рнЗрмбрм┐рмЯрнН',
    tip: 'ЁЯФе рммрнЛрмирм╕рнН рмкрмПрмгрнНрмЯ рмкрм╛рмЗрммрм╛ рмкрм╛рмЗрмБ рм╖рнНрмЯрнНрм░рм┐рмХрнН рмЬрм╛рм░рм┐ рм░рмЦрмирнНрмдрнБ!',
    hearts: 'рм╣рнГрмжрнЯ',
    // time: 'рм╕рморнЯ',
    // score: 'рм╕рнНрмХрнЛрм░',
    streak: 'рм╖рнНрмЯрнНрм░рм┐рмХрнН',
    // hint: 'рм╕рнВрмЪрмирм╛',
    pause: 'рммрм┐рм░рмдрм┐',
    resume: 'рмкрнБрмирм░рм╛рморнНрмн',
    topScore: 'рм╕рм░рнНрммрнЛрмЪрнНрмЪ рм╕рнНрмХрнЛрм░:',
    selectTerm: 'рмирм┐рмЦрнЛрмЬ рм╢рммрнНрмж рммрм╛рмЫрмирнНрмдрнБ',
    gameOver: 'ЁЯОо рмЦрнЗрм│ рм╢рнЗрм╖',
    finalScore: 'рмЕрмирнНрмдрм┐рмо рм╕рнНрмХрнЛрм░',
    // playAgain: 'рмкрнБрмирмГ рмЦрнЗрм│рмирнНрмдрнБ',
    mainMenu: 'рморнБрмЦрнНрнЯ рморнЗрмирнБ',
    shareScore: 'рм╕рнНрмХрнЛрм░ рм╕рнЗрнЯрм╛рм░ рмХрм░рмирнНрмдрнБ',
    youSurvived: (time) => `тП│ рмЖрмкрмг ${time}s рмкрм░рнНрмпрнНрнЯрмирнНрмд рммрмЮрнНрмЪрм┐рм▓рнЗ`,
    newHighScore: 'ЁЯПЖ рмирнВрмЖ рм╕рм░рнНрммрнЛрмЪрнНрмЪ рм╕рнНрмХрнЛрм░! рмЕрмнрм┐рмирмирнНрмжрми!',
    keepPracticing: 'рмЖрмкрмгрмЩрнНрмХрм░ рм╕рм░рнНрммрнЛрмЪрнНрмЪ рм╕рнНрмХрнЛрм░рмХрнБ рм╣рм░рм╛рмЗрммрм╛ рмкрм╛рмЗрмБ рмЕрмнрнНрнЯрм╛рм╕ рмХрм░рмирнНрмдрнБ!',
    askMe: 'рморнЛрмдрнЗ рмкрмЪрм╛рм░рмирнНрмдрнБ',
    // profile: 'рмкрнНрм░рнЛрмлрм╛рмЗрм▓рнН',
    coursest: 'рмкрм╛рмарнНрнЯрмХрнНрм░рмо',
    howToPlayContent: [
      '3 рм╣рнГрмжрнЯ рмПрммрмВ 60s рм╕рм╣рм┐рмд рмЖрм░рморнНрмн рмХрм░рмирнНрмдрнБред',
      'рмарм┐рмХрнН тЖТ +10 рмкрмПрмгрнНрмЯрнН, +3s, рм╖рнНрмЯрнНрм░рм┐рмХрнНрм╕ рмдрм┐рмЖрм░рм┐ рмХрм░рнЗред рмнрнБрм▓рнН тЖТ рм╣рнГрмжрнЯ рм╣рм░рм╛рмЗрммрм╛ рмПрммрмВ -5sред',
      'рмкрнНрм░рмдрм┐ рм░рмирнНтАМрм░рнЗ 2 рм╕рнВрмЪрмирм╛: рмПрмХ рмнрнБрм▓рнН рммрм┐рмХрм│рнНрмк рм╣рмЯрм╛рмЗрмерм╛рмП (-5 рмкрмПрмгрнНрмЯрнН рмкрнНрм░рмдрнНрнЯрнЗрмХ)ред',
      'рмпрнЗрмдрнЗ рм╕рморнЯ рмкрм░рнНрмпрнНрнЯрмирнНрмд рммрмЮрнНрмЪрм┐рмкрм╛рм░рм┐рммрнЗ рммрмЮрнНрмЪрмирнНрмдрнБред рм╕рм░рнНрммрнЛрмЪрнНрмЪ рм╕рнНрмХрнЛрм░ рм╕рнНрмерм╛рмирнАрнЯ рмнрм╛рммрм░рнЗ рм╕рнЗрмнрнН рм╣рнЛрмЗрмерм╛рмПред'
    ]
  },
};

const LanguageContext = createContext();

export const LanguageProvider = ({ children }) => {
  const [language, setLanguage] = useState('en');

  const value = {
    language,
    setLanguage,
    translations: translations[language],
  };

  return (
    <LanguageContext.Provider value={value}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = () => useContext(LanguageContext);
